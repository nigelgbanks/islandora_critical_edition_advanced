<?php

/**
 * @file
 * Add advanced data modeling options to Islandora Critical Editions.
 */


define('ISLANDORA_CRITICAL_EDITION_ADVANCED_MANAGE_CONTAINER', 'manage critical edition');
define('ISLANDORA_CRITICAL_EDITION_ADVANCED_CREATE', 'create critical editions');
define('ISLANDORA_CRITICAL_EDITION_ADVANCED_READ', 'read critical editions');
define('ISLANDORA_CRITICAL_EDITION_ADVANCED_MODIFY', 'modify critical editions');
define('ISLANDORA_CRITICAL_EDITION_ADVANCED_DELETE', 'delete critical editions');

/**
 * Implements hook_menu().
 */
function islandora_critical_edition_advanced_menu() {
  $items['admin/islandora/critical_edition'] = array(
    'title' => 'Islandora Critical Edition',
    'description' => 'Configure the Critical Edition Advanced Solution Pack.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['islandora/object/%islandora_object/manage/edition_container'] = array(
    'title' => 'Critical Edition',
    'page callback' => 'islandora_critical_edition_management_menu',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'manage_container'),
    'file' => 'includes/container_management.inc',
  );
  $items['islandora/object/%islandora_object/manage/edition_container/ingest'] = array(
    'title' => 'Add New Version',
    'page callback' => 'islandora_critical_edition_advanced_ingest_versionable_object_page',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_ACTION,
    'access callback' => 'islandora_object_access',
    'access arguments' => array(ISLANDORA_INGEST, 2),
    'file' => 'includes/ingest_versionable_object.form.inc',
  );
  $items['islandora/object/%islandora_object/manage/apparatus'] = array(
    'title' => 'Critical Edition Apparatus',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('critical_apparatus_form', 2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'manage_apparatus'),
    'file' => 'includes/critical_apparatus.inc',
  );
  $items['islandora/object/%islandora_object/manage/versionable_object'] = array(
    'title' => 'Versionable Object',
    'page callback' => 'islandora_versionable_object_management_menu',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'manage_versionable_object'),
    'file' => 'includes/versionable_object.inc',
  );

  $items['islandora/critical_edition/%islandora_object/mvd'] = array(
    'title' => 'Create MVD',
    'page callback' => 'islandora_critical_create_mvd',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_ADVANCED_MODIFY),
    'file' => 'includes/calliope.inc',
  );

  $items['islandora/critical_edition/viewer/trimed/%islandora_object'] = array(
    'title' => 'View Trimmed editor',
    'page callback' => 'islandora_critical_edition_advanced_view_trimmed_editor',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_MODIFY),
    'file' => 'includes/utilities.inc',
  );

  $items['islandora/transcription/edit/%islandora_object'] = array(
    'title' => 'Edit Transcription',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_transcription_edit_form', 3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(3, 'edit_transcription'),
    'file' => 'includes/transcriptions.inc',
  );

  $items['islandora/critical_edition/%islandora_object/create/versionable_object'] = array(
    'title' => 'Versionable Object',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_create_versionable_object', 2),
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_ADVANCED_CREATE),
    'file' => 'includes/versionable_object_creation.form.inc',
  );

  $items['islandora/object/%islandora_object/transcription'] = array(
    'title' => 'Transcription',
    'page callback' => 'islandora_critical_edition_display',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'view_versionable_object'),
    'file' => 'includes/islandora_critical_edition_display.inc',
  );

  $items['islandora/object/%islandora_object/tei'] = array(
    'title' => 'TEI',
    'page callback' => 'islandora_critical_edition_advanced_display_tei',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_advanced_object_management_access',
    'access arguments' => array(2, 'display_consolidated_tei'),
    'file' => 'includes/consolidate_tei.inc',
  );

  $items['islandora/object/%islandora_object/critical_edition_publish'] = array(
    'title' => 'Publish Viewer',
    'page callback' => 'islandora_critical_edition_publish_view',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_publish_access',
    'access arguments' => array(2),
  );

  $items['islandora/cwrc_viewer/prepare_advanced/%islandora_object'] = array(
    'title' => 'Prepare advanced viewer',
    'page callback' => 'islandora_critical_edition_advanced_prepare_advanced',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access arguments' => TRUE,
  );

  $items['islandora/cwrc_viewer/detail_meta_data'] = array(
    'title' => 'Prepare Metadata view',
    'page callback' => 'islandora_critical_edition_advanced_prepare_detail_meta_data',
    'type' => MENU_CALLBACK,
    'access arguments' => TRUE,
  );

  $items['islandora/cwrc_viewer/detail_transcription'] = array(
    'title' => 'Prepare Metadata view',
    'page callback' => 'islandora_critical_edition_advanced_prepare_detail_transcription',
    'type' => MENU_CALLBACK,
    'access arguments' => TRUE,
  );

  $items['islandora/cwrc_viewer/transformed_page/%islandora_object'] = array(
    'title' => 'Prepare Page consolidated TEI',
    'page callback' => 'islandora_critical_edition_advanced_prepare_page_tei_consolidated',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access arguments' => TRUE,
  );

    $items['islandora/collation'] = array(
    'title' => 'Collation',
    'page callback' => 'islandora_critical_edition_advanced_mvd_crud',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' =>array(ISLANDORA_CRITICAL_EDITION_ADVANCED_MODIFY),
    'file' => 'includes/mvd.inc',
  );

  $items['islandora/critical_edition_advanced_source/autocomplete'] = array(
    'page callback' => 'islandora_critical_edition_advanced_versionable_object_form_source_autocomplete',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS),
    'file' => 'includes/ingest_versionable_object.form.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Prepares consoladated tei info.
 *
 * @param unknown $object
 *   The object to prepare transformed TEI on.
 */
function islandora_critical_edition_advanced_prepare_page_tei_consolidated($object) {
  // Return page level consolidated TEI.
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/consolidate_tei');

  $versionable_object = islandora_object_load(html_entity_decode(stripslashes($_POST['versionable_object']), ENT_QUOTES, 'UTF-8'));
  islandora_critical_edition_consolidate_tei($versionable_object);
  $transformed_tei = islandora_critical_edition_advanced_display_tei($object, 'TEI');
  echo $transformed_tei;
}

/**
 * Prepares detailed transcription table.
 */
function islandora_critical_edition_advanced_prepare_detail_transcription() {
  module_load_include('inc', 'islandora_critical_edition_advanced', 'theme/theme');
  $pid = html_entity_decode(stripslashes($_POST['pid']), ENT_QUOTES, 'UTF-8');
  $versionable_object = islandora_object_load($pid);
  $table_data = islandora_critical_edition_container_collation_table_data($versionable_object);
  return drupal_json_output($table_data);
}

/**
 * Returns detail meta data for a posted pid object.
 */
function islandora_critical_edition_advanced_prepare_detail_meta_data() {
  module_load_include('inc', 'islandora', 'includes/metadata');
  $pid = html_entity_decode(stripslashes($_POST['pid']), ENT_QUOTES, 'UTF-8');
  $versionable_object = islandora_object_load($pid);
  return drupal_json_output(islandora_retrieve_metadata_markup($versionable_object));
}

/**
 * Prepare the advanced view.
 *
 * @param unknown $object
 *   Fedora object to prepare the advanced view.
 */
function islandora_critical_edition_advanced_prepare_advanced($object) {
  global $base_url;
  module_load_include('inc', 'islandora', 'includes/solution_packs');
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');

  $data = $object->id;

  $data_object = islandora_object_load($data);
  $reference_object;

  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/consolidate_tei');

  // Load the transcription related to this object, if required.
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
  $members = islandora_critical_edition_get_members($data);
  $transcription = array_search('islandora:transcriptionCModel', $members);
  $transcription_object = islandora_object_load($transcription);
  $transcription_text = $transcription_object['TRANSCRIPTION'];

  $tei_rdfs = array_keys(islandora_critical_edition_get_members($data));
  $player_params;
  if (!empty($tei_rdfs)) {
    $media_cmodels = array(
      'islandora:sp_videoCModel',
      'islandora:sp-audioCModel',
    );
    $tei_rdf = islandora_object_load($tei_rdfs[0]);
    $output;
    $rels = $tei_rdf->relationships->get(ISLANDORA_RELS_EXT_URI, ISLANDORA_CRITICAL_EDITION_IS_CRITICAL_EDITION_OF);
    if (is_array($rels)) {
      $reference_object = islandora_object_load($rels[0]['object']['value']);
      $test_obj = islandora_object_load('islandora:13241');
      if ($reference_object) {
        $content_models = $reference_object->relationships->get(FEDORA_MODEL_URI, 'hasModel');
        $content_model = $content_models[0]['object']['value'];
        if ($content_model == 'islandora:bookCModel') {
          // This is a ....sigh.. iFrame.
          $output = drupal_json_output(theme("islandora_critical_edition_advanced_detail_viewer", array(
            'islandora_object' => $tei_rdf,
            'media_viewer' => NULL,
            'player_params' => NULL,
            'transcription_text' => islandora_critical_edition_advanced_display_tei($test_obj, 'CWRC'),
            'module_base' => url($module_path),
            )));
          drupal_exit();
        }
        else {
          if (in_array($content_model, $media_cmodels)) {
            $player_params = array(
              "thumbnail" => "/islandora/object/$reference_object->id/datastream/TN/view",
              "width" => 'default',
              "height" => 'default',
            );
            $datastream = $reference_object['OBJ'];
            if ($content_model == 'islandora:sp_videoCModel') {
              $player_params['url'] = "http://discoverygarden-vagrant-emic.local/islandora/object/$reference_object->id/datastream/OBJ/view/$datastream->label";
            }
            elseif ($content_model == 'islandora:sp-audioCModel') {
              $player_params['url'] = "http://discoverygarden-vagrant-emic.local/islandora/object/$reference_object->id/datastream/PROXY_MP3/view/$datastream->label";
              $player_params['mimetype'] = 'audio/mpeg';
            }
          }
        }
      }
    }
  }
  if ($player_params) {
    $media_params = array(
      "pid" => $reference_object->id,
      "url" => $player_params['url'],
      "mime" => $player_params['mimetype'],
      "width" => 175,
      "tn" => url("islandora/object/{$reference_object->id}/datastream/TN/view"),
    );
    // This is the crit editor viewer.
    if ($output) {
      return drupal_json_output($output);
    }
    $viewer = islandora_get_viewer($media_params, 'islandora_audio_viewers', $reference_object);
    drupal_json_output(theme("islandora_critical_edition_advanced_detail_viewer", array(
      'islandora_object' => $data,
      'media_viewer' => $viewer,
      'player_params' => $player_params,
      'transcription_text' => (isset($transcription_text->content) ? $transcription_text->content : NULL),
      'module_base' => url($module_path),
    )));
  }
  else {
    drupal_json_output(theme("islandora_critical_edition_advanced_detail_viewer", array(
      'islandora_object' => $data,
      'media_viewer' => url("islandora/object/$data/datastream/TN/view"),
      'player_params' => NULL,
      'transcription_text' => (isset($transcription_text->content) ? $transcription_text->content : NULL),
      'module_base' => url($module_path),
    )));
  }
}

/**
 * Determines whether or not to show the publish tab.
 *
 * @global object $user
 *
 * @param FedoraObject $fedora_object
 *   A FedoraObject.
 *
 * @return bool
 *   Whether the user has access or not.
 */
function islandora_critical_edition_publish_access($fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }
  foreach ($fedora_object->models as $model) {
    if ($model == 'islandora:criticalEditionContainerCModel') {
      return user_access(ISLANDORA_CRITICAL_EDITION_ADVANCED_READ);
    }
  }
  return FALSE;
}

/**
 * The critical edition publish view.
 *
 * @param FedoraObject $object
 *   A FedoraObject.
 *
 * @return string
 *   The marked up output.
 */
function islandora_critical_edition_publish_view(AbstractObject $object) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  return theme('islandora_critical_edition_publish_view',
    array(
      'islandora_object' => $object,
      'publish_form' => NULL,
      'path' => url($module_path))
    );
}

/**
 * The critical edition elastislide view.
 *
 * @param FedoraObject $object
 *   A FedoraObject.
 *
 * @return string
 *   The marked up output.
 */
function islandora_critical_edition_advanced_elastislide_view(AbstractObject $object) {
  return theme('islandora_critical_edition_advanced_elastislide_view', array('islandora_object' => $object));
}

/**
 * Implements hook_preprocess().
 */
function islandora_critical_edition_advanced_preprocess_islandora_critical_edition_advanced_elastislide_view(&$variables) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  $islandora_critical_edition = drupal_get_path('module', 'islandora_critical_edition');

  drupal_add_js("$module_path/js/Elastislide/js/modernizr.custom.17475.js");
  drupal_add_js("$module_path/js/Elastislide/js/jquerypp.custom.js");
  drupal_add_js("$module_path/js/Elastislide/js/jquery.elastislide.js");

  drupal_add_css("$module_path/js/Elastislide/css/elastislide.css");
  drupal_add_css("$module_path/js/Elastislide/css/custom.css");

  drupal_add_css("$module_path/css/jquery-ui.css");
  // drupal_add_js("$module_path/js/jquery-ui.js");
  drupal_add_js("$module_path/js/startup.js");

  // Include the pagenation script/styles on the advanced detail viewer.
  drupal_add_css("$module_path/js/jqPagination/css/jqpagination.css");
  drupal_add_js("$module_path/js/jqPagination/js/jquery.jqpagination.js");
  drupal_add_js("$module_path/js/jqPagination/js/scripts.js");

  // Include the jQuery UI Switch Button dependancies.
  drupal_add_css("$module_path/js/jQuery-switchButton/jquery.switchButton.css");
  drupal_add_js("$module_path/js/jQuery-switchButton/jquery.switchButton.js");

  // Include the jstree dependancies.
  // drupal_add_js("$module_path/js/jstree/dist/jstree.js");
}

/**
 * Implements hook_preprocess().
 */
function islandora_critical_edition_advanced_preprocess_islandora_critical_edition_advanced_aparatus_pager(&$variables) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  drupal_add_css("$module_path/css/aparatus_pager.css");
  drupal_add_js("$module_path/js/pager.js");
}

/**
 * Implements hook_preprocess().
 */
function islandora_critical_edition_advanced_preprocess_islandora_critical_edition_publish_view(&$variables) {
  global $base_url;
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');

  $islandora_critical_edition = drupal_get_path('module', 'islandora_critical_edition');
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  drupal_add_css("$module_path/css/jquery-ui.css");
  drupal_add_js("$module_path/js/jquery-ui.js");
  drupal_add_js("$module_path/js/startup.js");

  // Include the pagenation script/styles on the advanced detail viewer.
  drupal_add_css("$module_path/js/jqPagination/css/jqpagination.css");
  drupal_add_js("$module_path/js/jqPagination/js/jquery.jqpagination.js");
  drupal_add_js("$module_path/js/jqPagination/js/scripts.js");

  drupal_add_js("$module_path/js/zoom-master/jquery.zoom.js");
  drupal_add_css("$module_path/js/jQuery-switchButton/jquery.switchButton.css");
  drupal_add_js(
    array(
      'islandora_critical_edition_advanced' =>
      array(
        'module_base' => $module_path,
      ),
    ), 'setting');
  // Include the jstree dependancies.
  $obj = islandora_object_load($variables['islandora_object']);
  $associated_objects = islandora_critical_edition_get_members($variables['islandora_object']);
  $associated_object_keys = array_keys($associated_objects);
  // Use the jquery out of islandora_critical_edition, because we can.
  $islandora_critical_edition = drupal_get_path('module', 'islandora_critical_edition');

  // Add the required jwplayer js.
  drupal_add_js("$base_url/sites/all/libraries/jwplayer/jwplayer.js");

  $crit_app_key = islandora_critical_edition_get_members($variables['islandora_object'], 'islandora:criticalApparatusCModel');

  $critical_aparatus = islandora_object_load(array_search('islandora:criticalApparatusCModel', $crit_app_key));
  $to_construct;
  foreach ($critical_aparatus as $datastream) {
    // Access individual datastreams and its content.
    $to_construct[$datastream->id] = $datastream->content;
  }

  $to_construct['appendix'] = 'Appendix';
  $to_construct['versions'] = 'Versions';

  $tn_array = array();
  // Build the TN array for the elastislide viewer.
  foreach (array_keys($associated_object_keys) as $element) {
    $tn_array[$associated_object_keys[$element]] = array(
      'TN' => url("islandora/object/$associated_object_keys[$element]/datastream/TN/view"),
      'link' => url("islandora/object/$associated_object_keys[$element]"),
      'pid' => $associated_object_keys[$element],
    );
  }
  $variables['scroll_list'] = NULL;
  $aparatus_datastreams = islandora_critical_apparatus_get_datastreams();
  $form_state['publish_viewer']['#type'] = 'vertical_tabs';
  $aparatus_datastreams['appendix'] = 'Appendix';
  $aparatus_datastreams['versions'] = 'Versions';

  $show_all = FALSE;
  // Build the aparatus content.
  $all_keys = array_keys($aparatus_datastreams);

  foreach (array_keys($aparatus_datastreams) as $element) {
    if (isset($to_construct[$element]) || $show_all == TRUE) {
      $entry = (array_search($element, $all_keys, TRUE) - 1);
      $form_state['publish_viewer']["{$element}_tab"] = array(
        '#id' => "{$element}-tab",
        '#group' => "{$element}_viewer",
        '#access' => TRUE,
        '#type' => 'fieldset',
        '#title' => $aparatus_datastreams[$element],
        '#form' => theme('islandora_critical_edition_advanced_critical_aparatus', array('islandora_objects' => $variables['islandora_object'])),
      );
      if ($element == 'appendix' || $element == 'versions' || $element == 'collations') {
        $body_tt = theme("islandora_critical_edition_container_{$element}_table", array("object" => $variables['islandora_object']));
        $form_state['publish_viewer']["{$element}_tab"]['body'] = array(
          '#id' => "{$element}-tab",
          '#group' => "{$element}_viewer",
          '#access' => TRUE,
          '#type' => 'markup',
          '#title' => $aparatus_datastreams[$element],
          '#markup' => theme(
            "islandora_critical_edition_advanced_critical_aparatus",
            array(
              'islandora_object' => $variables['islandora_object'],
              'text_body' => theme("islandora_critical_edition_container_{$element}_table",
                array(
                  "object" => $variables['islandora_object'],
                  'columns' => array(
                    'version_name' => TRUE,
                    'source_name' => TRUE,
                    'transcriptions' => FALSE,
                    'operations' => FALSE,
                    'descriptions' => TRUE,
                  ),
                )
              ),
              'text_header' => $aparatus_datastreams[$element],
              'text_pager' => theme("islandora_critical_edition_advanced_aparatus_pager",
               array(
                 'islandora_object' => $variables['islandora_object'],
                 'tab_previous' => (isset($all_keys[$entry]) ? substr($aparatus_datastreams[$all_keys[$entry]], 0, 16) : "_blank_"),
                 'tab_next' => (isset($all_keys[$entry + 2]) ? substr($aparatus_datastreams[$all_keys[$entry + 2]], 0, 16) : "_blank_"),
               )
              ),
            )
          ),
        );
      }
      else {
        $form_state['publish_viewer']["{$element}_tab"]['body'] = array(
          '#id' => "{$element}-tab",
          '#group' => "{$element}_viewer",
          '#access' => TRUE,
          '#type' => 'markup',
          '#title' => $aparatus_datastreams[$element],
          '#markup' => theme(
            'islandora_critical_edition_advanced_critical_aparatus',
              array(
                'islandora_object' => $variables['islandora_object'],
                'text_body' => (isset($to_construct[$element]) ? $to_construct[$element] : ""),
                'text_header' => $aparatus_datastreams[$element],
                'text_pager' => theme("islandora_critical_edition_advanced_aparatus_pager",
                  array(
                    'islandora_object' => $variables['islandora_object'],
                    'tab_previous' => (isset($all_keys[$entry]) ? substr($aparatus_datastreams[$all_keys[$entry]], 0, 16) : "_blank_"),
                    'tab_next' => (isset($all_keys[$entry + 2]) ? substr($aparatus_datastreams[$all_keys[$entry + 2]], 0, 16) : "_blank_"),
                  )
                ),
              )
          ),
        );
      }
    }
  }
  $variables['publish_form'] = drupal_render($form_state);
}

/**
 * Implements hook_theme().
 */
function islandora_critical_edition_advanced_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_critical_edition_container' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_edition_container',
      'pattern' => 'islandora_critical_edition_container__',
      'variables' => array('object' => NULL),
    ),
    'islandora_critical_edition_container_table' => array(
      'file' => 'theme/theme.inc',
      'variables' => array(
        'object' => NULL,
        'title' => '',
        'header' => array(),
        'rows' => array(),
        'offset' => 0,
        'limit' => 25,
        'total' => 0,
        'pager' => array(
          'element' => 0,
          'tags' => array('<<', '<', '', '>', '>>'),
          'quantity' => 3,
        ),
      ),
    ),
    'islandora_critical_edition_container_versions_table' => array(
      'file' => 'theme/theme.inc',
      'variables' => array(
        'object' => NULL,
        'limit' => 25,
        'columns' => array(
          'version_name' => TRUE,
          'source_name' => TRUE,
          'transcriptions' => TRUE,
          'operations' => TRUE,
          'descriptions' => FALSE,
        ),
        'pager' => array(
          'element' => 0,
          'tags' => array('<<', '<', '', '>', '>>'),
          'quantity' => 3,
        ),
      ),
    ),
    'islandora_critical_edition_container_collations_table' => array(
      'file' => 'theme/theme.inc',
      'variables' => array(
        'object' => NULL,
        'limit' => 25,
        'columns' => array(
          'collation_name' => TRUE,
          'transcriptions' => TRUE,
          'collation_filter' => TRUE,
          'operations' => TRUE,
        ),
        'pager' => array(
          'element' => 1,
          'tags' => array('<<', '<', '', '>', '>>'),
          'quantity' => 3,
        ),
      ),
    ),
    'islandora_critical_edition_advanced_detail_viewer' => array(
      'template' => 'theme/islandora_critical_edition_advanced_detail_viewer',
      'variables' => array(
        'islandora_object' => NULL,
        'media_viewer' => NULL,
        'player_params' => NULL,
        'transcritption_text' => NULL,
        'module_base' => NULL,
      ),
    ),
    'islandora_critical_edition_advanced_aparatus_pager' => array(
      'template' => 'theme/islandora_critical_edition_advanced_aparatus_pager',
      'variables' => array(
        'tab_previous' => '',
        'tab_next' => '',
      ),
    ),
    'islandora_critical_edition_advanced_elastislide_view' => array(
      'template' => 'theme/islandora_critical_edition_elastislide',
      'variables' => array(
        'islandora_object' => NULL,
        'image_data' => NULL,
      ),
    ),
    'islandora_critical_edition_advanced_critical_aparatus' => array(
      'template' => 'theme/islandora_critical_edition_advanced_critical_aparatus',
      'variables' => array(
        'islandora_objects' => NULL,
        'text_body' => '',
        'text_header' => '',
        'text_pager' => '',
      ),
    ),
    'islandora_critical_edition_publish_view' => array(
      'template' => 'theme/islandora_critical_edition_publish_view',
      'variables' => array(
        'islandora_object' => NULL,
        'publish_form' => NULL,
        'path' => NULL),
    ),
    'islandora_versionable_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_versionable_object',
      'pattern' => 'islandora_versionable_object__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_critical_apparatus' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_apparatus',
      'pattern' => 'islandora_critical_apparatus__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_transcription_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_transcription_object',
      'pattern' => 'islandora_transcription_object__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_critical_media_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_media_object',
      'pattern' => 'islandora_critical_media_object__',
      'variables' => array('islandora_object' => NULL),
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_criticalEditionContainerCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_critical_edition_container', array('object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_criticalapparatuscmodel_islandora_view_object($object, $page_number, $page_size) {
  module_load_include('inc', 'islandora_critical_edition', 'includes/utilities');
  $output = theme('islandora_critical_apparatus', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_transcriptioncmodel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_transcription_object', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_versionableobjectcmodel_islandora_view_object($object, $page_number, $page_size) {
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
  $tei_rdfs = array_keys(islandora_critical_edition_get_members($object->id, 'islandora:criticalEditionCModel'));
  if (!empty($tei_rdfs)) {
    $media_cmodels = array(
      'islandora:sp_videoCModel',
      'islandora:sp-audioCModel',
    );
    $tei_rdf = islandora_object_load($tei_rdfs[0]);
    $rels = $tei_rdf->relationships->get(ISLANDORA_RELS_EXT_URI, ISLANDORA_CRITICAL_EDITION_IS_CRITICAL_EDITION_OF);
    if (is_array($rels)) {
      $reference_object = islandora_object_load($rels[0]['object']['value']);
      $content_models = $reference_object->relationships->get(FEDORA_MODEL_URI, 'hasModel');
      $content_model = $content_models[0]['object']['value'];
      if ($content_model == 'islandora:bookCModel') {
        $output = theme('islandora_critical_edition', array('islandora_object' => $tei_rdf));
      }
      if (in_array($content_model, $media_cmodels)) {
        $output = theme('islandora_critical_media_object',
          array(
            'islandora_object' => $tei_rdf,
            'reference_object' => $reference_object,
            'content_model' => $content_model)
        );
      }
    }
  }
  else {
    $members = islandora_critical_edition_get_members($object->id);
    $output = theme('islandora_versionable_object', array('islandora_object' => $object, 'members' => $members));
  }
  return array('' => $output);
}

/**
 * Implements hook_permission().
 */
function islandora_critical_edition_advanced_permission() {
  return array(
    ISLANDORA_CRITICAL_EDITION_ADVANCED_CREATE => array(
      'title' => t('Create Critical Edition Objects'),
      'description' => t('Create crit'),
    ),
    ISLANDORA_CRITICAL_EDITION_ADVANCED_READ => array(
      'title' => t('Read Critical Edition Objects'),
      'description' => t('Access critical editions and their associated objects.'),
    ),
    ISLANDORA_CRITICAL_EDITION_ADVANCED_MODIFY => array(
      'title' => t('Modify Critical Editions'),
      'description' => t('Modify and edit objects assoicated with Critical Editions.'),
    ),
    ISLANDORA_CRITICAL_EDITION_ADVANCED_DELETE => array(
      'title' => t('Delete Critical Editions'),
      'description' => t('Delete objects assoicated with Critical Editions.'),
    ),
    ISLANDORA_CRITICAL_EDITION_ADVANCED_MANAGE_CONTAINER => array(
      'title' => t('Manage Critical Edition'),
      'description' => t('Manage objects within critical edition.'),
    ),
  );
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_critical_edition_advanced_islandora_criticalEditionContainerCModel_islandora_ingest_steps($form_state) {
  return array(
    'islandora_create_critical_edition' => array(
      'type' => 'callback',
      'weight' => 8,
      'module' => 'islandora_critical_edition_advanced',
      'do_function' => array(
        'function' => 'islandora_critical_edition_advanced_add_apparatus',
        'file' => 'includes/critical_apparatus.inc',
      ),
    ),
  );
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_critical_edition_advanced_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  // Critical Edition Overview.
  $tei_rdf_container_content_model = $connection->repository->constructObject('islandora:criticalEditionContainerCModel');
  $tei_rdf_container_content_model->owner = 'fedoraAdmin';
  $tei_rdf_container_content_model->label = 'Islandora Critical Edition Overview Content Model';
  $tei_rdf_container_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $tei_rdf_container_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_edition_container_ds_composite_model.xml", FALSE);
  $tei_rdf_container_content_model->ingestDatastream($datastream);
  // Versionable Object Content Model.
  $tei_rdf_versionable_object_content_model = $connection->repository->constructObject('islandora:versionableObjectCModel');
  $tei_rdf_versionable_object_content_model->owner = 'fedoraAdmin';
  $tei_rdf_versionable_object_content_model->label = 'Islandora Versionable Object Content Model';
  $tei_rdf_versionable_object_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $tei_rdf_versionable_object_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_versionable_object_ds_composite_model.xml", FALSE);
  $tei_rdf_versionable_object_content_model->ingestDatastream($datastream);
  // Critical Apparatus Content Model.
  $tei_rdf_apparatus_content_model = $connection->repository->constructObject('islandora:criticalApparatusCModel');
  $tei_rdf_apparatus_content_model->owner = 'fedoraAdmin';
  $tei_rdf_apparatus_content_model->label = 'Islandora Critical Apparatus Content Model';
  $tei_rdf_apparatus_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $tei_rdf_apparatus_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_apparatus_ds_composite_model.xml", FALSE);
  $tei_rdf_apparatus_content_model->ingestDatastream($datastream);
  // Transcription Content Model.
  $transcription_content_model = $connection->repository->constructObject('islandora:transcriptionCModel');
  $transcription_content_model->owner = 'fedoraAdmin';
  $transcription_content_model->label = 'Islandora Critical Transcription Content Model';
  $transcription_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $transcription_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_transcription_ds_composite_model.xml", FALSE);
  $transcription_content_model->ingestDatastream($datastream);
  return array(
    'islandora_critical_edition_advanced' => array(
      'title' => 'Islandora critical editions - advanced',
      'objects' => array(
        $tei_rdf_versionable_object_content_model,
        $tei_rdf_container_content_model,
        $tei_rdf_apparatus_content_model,
        $transcription_content_model,
      ),
    ),
  );
}

/**
 * Controls access to management interface.
 *
 * @param AbstractObject $object
 *   Object to be examined
 * @param String $context
 *   Determines origin of function call
 *
 * @return bool
 *   Access to path
 */
function islandora_critical_edition_advanced_object_management_access($object, $context) {
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
  if (is_null($object)) {
    return FALSE;
  }

  $content_models = $object->models;
  $access = FALSE;

  switch ($context) {

    case 'associate_versionable_object':
      if (in_array('islandora:criticalEditionContainerCModel', $content_models) && user_access(ISLANDORA_CRITICAL_EDITION_ADVANCED_MODIFY)) {
        $access = TRUE;
      }
      break;

    case 'manage_container':
      if (in_array('islandora:criticalEditionContainerCModel', $content_models) && user_access(ISLANDORA_CRITICAL_EDITION_ADVANCED_MANAGE_CONTAINER)) {
        $access = TRUE;
      }
      break;

    case 'manage_versionable_object':
      if (in_array('islandora:versionableObjectCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'edit_transcription':
      if (in_array('islandora:transcriptionCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'manage_apparatus':
      if (in_array('islandora:criticalApparatusCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'display_consolidated_tei':
      if (in_array('islandora:versionableObjectCModel', $content_models)) {
        $tei_rdfs = array_keys(islandora_critical_edition_get_members($object->id, 'islandora:criticalEditionCModel'));
        if (!empty($tei_rdfs)) {
          $access = TRUE;
        }
      }
      break;

    case 'view_critical_edition':
      if (in_array('islandora:criticalEditionContainerCModel', $content_models)) {
          $access = TRUE;
      }
      break;

    case 'view_versionable_object':
      module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
      $members = islandora_critical_edition_get_members($object->id);
      $transcription = array_search('islandora:transcriptionCModel', $members);
      $transcription_object = islandora_object_load($transcription);
      if ($transcription_object && in_array('islandora:versionableObjectCModel', $content_models)) {
        $access = TRUE;
      }
      break;

    case 'manage_apparatus':
      if (in_array('islandora:criticalApparatusCModel', $content_models)) {
        $access = TRUE;
      }
      break;
  }

  return $access && islandora_object_access_callback(FEDORA_VIEW_OBJECTS, $object);
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_critical_edition_advanced_islandora_xml_form_builder_form_associations() {
  return array(
    'critical_edition_form_mods' => array(
      'content_model' => 'islandora:criticalEditionContainerCModel',
      'form_name' => 'Islandora Critical Edition Mods Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
    'versionable_object_form_mods' => array(
      'content_model' => 'islandora:versionableObjectCModel',
      'form_name' => 'Islandora Versionable Object Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_critical_edition_advanced_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_critical_edition_advanced');
  return array(
    'Islandora Versionable Object Form' => array('form_file' => "$module_path/data/forms/versionable_object_form_mods.xml"),
    'Islandora Critical Edition Mods Form' => array('form_file' => "$module_path/data/forms/critical_edition_container_form_mods.xml"),
  );
}

/**
 * Implements hook_form_islandora_object_properties_form_alter().
 */
function islandora_critical_edition_advanced_form_islandora_delete_object_form_alter(array &$form, array &$form_state) {
  module_load_include('inc', 'islandora_critical_edition_advanced', 'includes/utilities');
  $object = $form_state['object'];
  $message = NULL;
  $pids_to_delete = array($object->id);

  if (in_array('islandora:criticalEditionContainerCModel', $object->models)) {
    $message = t('This will remove the entire Critical Edition and related Versionable Objects. This action cannot be undone.');
    $pids_to_delete = array_merge($pids_to_delete, array_keys(islandora_critical_edition_get_members($object->id, 'islandora:criticalApparatusCModel')));
    $versionable_objects = array_keys(islandora_critical_edition_get_members($object->id, 'islandora:versionableObjectCModel'));
    foreach ($versionable_objects as $versionable_object) {
      if (count(islandora_critical_get_parent_editions($versionable_object)) > 1) {
        $objects_to_free[$versionable_object] = $object->id;
        $key = array_search($versionable_object, $versionable_objects);
        if ($key !== FALSE) {
          unset($versionable_objects[$key]);
        }
      }
    }
    $pids_to_delete = array_merge($pids_to_delete, $versionable_objects);
    foreach ($versionable_objects as $versionable_object) {
      $pids_to_delete = array_merge($pids_to_delete, array_keys(islandora_critical_edition_get_members($versionable_object, 'islandora:transcriptionCModel')));
      $debug_array = islandora_critical_edition_get_members($versionable_object);
      $tei_rdfs = array_keys(islandora_critical_edition_get_members($versionable_object, 'islandora:criticalEditionCModel'));
      foreach ($tei_rdfs as $tei_rdf) {
        $objects_to_free[$tei_rdf] = $versionable_object;
      }
    }
  }
  if (in_array('islandora:versionableObjectCModel', $object->models)) {
    $message = t('This will remove the Versionable Object and related transcription objects. This action cannot be undone.');
    $pids_to_delete = array_merge($pids_to_delete, array_keys(islandora_critical_edition_get_members($object->id, 'islandora:transcriptionCModel')));
    $tei_rdfs = array_keys(islandora_critical_edition_get_members($object->id, 'islandora:criticalEditionCModel'));
    foreach ($tei_rdfs as $tei_rdf) {
      $objects_to_free[$tei_rdf] = $object->id;
    }
  }

  if ($message) {
    $form['description']['#markup'] = $message;
    $form['#submit'] = array('islandora_critical_edition_advanced_islandora_delete_object_form_submit');
    $form_state['pids_to_delete'] = isset($pids_to_delete) ? $pids_to_delete : NULL;
    $form_state['objects_to_free'] = isset($objects_to_free) ? $objects_to_free : NULL;
  }
}

/**
 * Delete or dissassociate related objects.
 *
 * @param array $form
 *   The Drupal form.
 * @param array $form_state
 *   The Drupal form state.
 */
function islandora_critical_edition_advanced_islandora_delete_object_form_submit(array $form, array &$form_state) {
  // Add collection awareness.
  module_load_include('inc', 'islandora', 'includes/utilities');
  $object = $form_state['object'];
  if (isset($form_state['pids_to_delete'])) {
    foreach ($form_state['pids_to_delete'] as $pid) {
      $object = islandora_object_load($pid);
      $object->repository->purgeObject($pid);
    }
  }
  if (isset($form_state['objects_to_free'])) {
    foreach ($form_state['objects_to_free'] as $rdf => $vo) {
      $object = islandora_object_load($rdf);
      if ($object) {
        $object->relationships->remove(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', $vo);
      }
    }
  }
  $form_state['redirect'] = isset($parent) ? "islandora/object/{$parent->id}" : 'islandora';
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_critical_edition_advanced_islandora_versionableObjectCModel_islandora_ingest_steps(array $form_state) {
  return array(
    'islandora_critical_edition_versionable_object' => array(
      'weight' => -10,
      'type' => 'form',
      'form_id' => 'islandora_critical_edition_advanced_versionable_object_form',
      'module' => 'islandora_critical_edition_advanced',
      'file' => 'includes/ingest_versionable_object.form.inc',
    ),
  );
}

/**
 * Implements hook_islandora_ingest_steps_alter().
 */
function islandora_critical_edition_advanced_islandora_ingest_steps_alter(array &$steps, array $form_state) {
  $shared_storage = islandora_ingest_form_get_shared_storage($form_state);
  if (!empty($steps['xml_form_builder_metadata_step']) && isset($shared_storage['source'])) {
    $source = islandora_object_load($shared_storage['source']);
    if (isset($source['MODS'])) {
      // Set the template to be the source objects MODS datastream if present.
      // This pre-populates the Metadata form.
      $steps['xml_form_builder_metadata_step']['args'][0]['template'] = $source['MODS']->content;
    }
  }
}
